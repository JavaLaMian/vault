<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vault.demo.dao.backstage.BackLoanDao">
    <select id="selLoan" resultType="map">
        <![CDATA[
          select l.lId,c.name,l.loanType,l.loanWantMoney,l.loanPurpose,l.applicationTime,l.uId,l.loanStatue from loan l inner join credit c on ( l.uId = c.uId and c.creditLV='1') and l.loanStatue= 0
        ]]>
    </select>
    <select id="selLoanByUid" resultType="Loan">
        <![CDATA[
          select * from loan where uId=#{uId} and loanStatue=0
        ]]>
    </select>
    <select id="selCreditByUid" resultType="Credit">
        <![CDATA[
          select * from credit where uId=#{uId}
        ]]>
    </select>
    <select id="selHouseByHid" resultType="House">
        <![CDATA[
          select * from house where uId=#{uId}
        ]]>
    </select>
    <select id="selCarByCid" resultType="Car">
        <![CDATA[
          select * from car where uId=#{uId}
        ]]>
    </select>
    <select id="selUserByUid" resultType="Userimf">
        <![CDATA[
          select * from userimf where uId=#{uId}
        ]]>
    </select>
    <update id="updLoan" parameterType="Loan">
        update loan set maxLimit=#{loan.maxLimit},minLimit=#{loan.minLimit},applicationEnd=#{loan.applicationEnd},interest=#{loan.interest},lowLimit=#{loan.lowLimit},topLimit=#{loan.topLimit},loanStatue=#{loan.loanStatue},bidType=#{loan.bidType},bidId=#{loan.bidId} where lId=#{loan.lId}
    </update>
    <select id="selLoanByLid" resultType="loan">
        <![CDATA[
          select * from loan where lId=#{lId}
        ]]>
    </select>
    <insert id="addPerBid" parameterType="PerBid" useGeneratedKeys="true" keyProperty="perBid" keyColumn="perBid">
        <selectKey keyProperty="perBid" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT into perBid(perBid,borrowTime,borrower,perBidName,rate,addRate,combination,transLine,clockLine,transfer,bidStatus,startTime) VALUES(null,#{perBid.borrowTime},#{perBid.borrower},#{perBid.perBidName},#{perBid.rate},#{perBid.addRate},#{perBid.combination},#{perBid.transLine},#{perBid.clockLine},#{perBid.transfer},#{perBid.bidStatus},#{perBid.startTime})
    </insert>
    <update id="updPerBidStatus">
        update perBid set combination = #{action.acMoney},bidStatus=0 where perBid=#{loan.bidId}
    </update>
</mapper>